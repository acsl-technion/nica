diff --git a/project/create_project.tcl b/project/create_project.tcl
index 05cb2e665bf9..f0d2341bfb6b 100755
--- a/project/create_project.tcl
+++ b/project/create_project.tcl
@@ -1,4 +1,11 @@
 ###############################################################
+###   Overriding "known" issues 
+###   Vivado DRC reports a false positive for LUTLP-1#1 Combinatorial Loop
+###   See https://www.xilinx.com/support/answers/60591.html
+###############################################################
+set_property SEVERITY {Warning} [get_drc_checks LUTLP-1]
+
+###############################################################
 ###   Tcl Variables
 ###############################################################
 if { $argc == 1 } {
@@ -20,6 +27,8 @@ source $tclDir/impl_utils.tcl
 source $tclDir/hd_floorplan_utils.tcl
 source $tclDir/pr_utils.tcl
 
+source $tclDir/env.tcl
+
 ###############################################################
 ### Define Part, Package, Speedgrade 
 ###############################################################
@@ -50,7 +59,23 @@ set hlsDir 		"../sources/ip_repo"
 ###############################################################
 ### Define SBU files
 ###############################################################
-set verilogList       [glob -nocomplain $verilogDir/*.v]
+set dirs [ list {*}$ikernels . ]
+if { $num_ikernels == 1 } {
+    lappend dirs nica
+} elseif { $num_ikernels == 2 } {
+    lappend dirs nica-2
+}
+
+puts "dirs = $dirs"
+set verilogList [list]
+foreach d $dirs {
+    lappend verilogList [glob -nocomplain $verilogDir/$d/*.v]
+    puts "adding files in dir $d"
+    puts [glob -nocomplain $verilogDir/$d/*.v]
+}
+set verilogList [concat $verilogList]
+puts "verilogList: $verilogList"
+
 set vhdlList       	  [glob -nocomplain $vhdlDir/*.vhd]
 set xciList           [glob -nocomplain $xciDir/*/*.xci]
 set bdList            [glob -nocomplain $bdDir/*/*.bd]
@@ -82,6 +107,12 @@ set_attribute module $sbu ipRepo              $ipRepoList
 set_attribute module $sbu xdc                 $xdcList
 set_attribute module $sbu synthXDC            $xdcSynthList
 set_attribute module $sbu synth               1
+puts "Building for ikernels: $ikernel0 $ikernel1"
+set_attribute module $sbu vlog_defines [list \
+    "BUILD_NUMBER=$build_number" \
+    "SIGMON_ENABLE=$sigmon_enable" \
+    "IKERNEL0=$ikernel0" \
+    "IKERNEL1=$ikernel1"]
 
 set sbu_instance1 "sbu"
 
diff --git a/scripts/xilinx/env.tcl b/scripts/xilinx/env.tcl
new file mode 100644
index 000000000000..d21cdeddf590
--- /dev/null
+++ b/scripts/xilinx/env.tcl
@@ -0,0 +1,32 @@
+package require Tcl
+package require struct::set
+
+proc get_env {var default_value} {
+    puts "Getting environment variable: $var"
+    if {[info exists ::env($var)]} {
+        set value $::env($var)
+        puts "Found it. ${var}=${value}"
+        return $value
+    } else {
+        puts "Not found. Setting to default ${var}=${default_value}"
+        return $default_value
+    }
+}
+
+set build_number [ get_env BUILD_NUMBER 2989 ]
+set sigmon_enable [ get_env SIGMON_ENABLE 1 ]
+set ikernel0 [ get_env IKERNEL0 "threshold" ]
+set ikernel1 [ get_env IKERNEL1 "threshold" ]
+set num_ikernels [ get_env NUM_IKERNELS 1 ]
+set cms_heap_depth [ get_env CMS_HEAP_DEPTH 256 ]
+
+set ikernel_defs [list]
+for {set i 0} {$i < $num_ikernels} {incr i} {
+    lappend ikernel_defs "NUM_IKERNELS_GT_$i=1"
+}
+
+::struct::set include ikernels $ikernel0
+::struct::set include ikernels $ikernel1
+
+puts "Building for ikernels: $ikernel0 $ikernel1"
+
diff --git a/scripts/xilinx/implement.tcl b/scripts/xilinx/implement.tcl
index 1bb308227984..a07f625a0554 100755
--- a/scripts/xilinx/implement.tcl
+++ b/scripts/xilinx/implement.tcl
@@ -421,7 +421,8 @@ proc implement {impl} {
       ##############################################
       if {$verbose > 1} {
          set start_time [clock seconds]
-         command "report_utilization -file $reportDir/${top}_utilization_link_design.rpt" "$resultDir/temp.log"
+         command "report_utilization -hierarchical -file $reportDir/${top}_utilization_link_design.rpt" "$resultDir/temp.log"
+         command "report_utilization -hierarchical -format xml -file $reportDir/${top}_utilization_link_design.xml" "$resultDir/temp.log"
          set end_time [clock seconds]
          log_time report_utilization $start_time $end_time
       } 
diff --git a/scripts/xilinx/step.tcl b/scripts/xilinx/step.tcl
index d5f8e0c54f9a..b39a647b0db5 100755
--- a/scripts/xilinx/step.tcl
+++ b/scripts/xilinx/step.tcl
@@ -111,7 +111,8 @@ proc impl_step {phase instance {options none} {directive none} {pre none} {setti
    #Write out additional reports controled by verbose level
    if {$verbose > 1 || [string match $phase "route_design"]} {
       set start_time [clock seconds]
-      command "report_utilization -file $reportDir/${instance}_utilization_${phase}.rpt" "$resultDir/temp.log"
+      command "report_utilization -hierarchical -file $reportDir/${instance}_utilization_${phase}.rpt" "$resultDir/temp.log"
+      command "report_utilization -hierarchical -format xml -file $reportDir/${instance}_utilization_${phase}.xml" "$resultDir/temp.log"
       set end_time [clock seconds]
       log_time report_utilization $start_time $end_time
    }
diff --git a/scripts/xilinx/synthesize.tcl b/scripts/xilinx/synthesize.tcl
index caef6ef03864..998ddc216cb9 100755
--- a/scripts/xilinx/synthesize.tcl
+++ b/scripts/xilinx/synthesize.tcl
@@ -142,7 +142,10 @@ proc synthesize { module } {
    
    #### Set Verilog Defines
    if {$vlogDefines != ""} {
+      puts "\tSetting verilog_define to $vlogDefines."
       command "set_property verilog_define \{$vlogDefines\} \[current_fileset\]"
+   } else {
+      puts "\tNo verilog_define set."
    }
    
    #### Set Include Directories
@@ -173,7 +176,8 @@ proc synthesize { module } {
    
    if {$verbose >= 1} {
       set start_time [clock seconds]
-      command "report_utilization -file $resultDir/${moduleName}_utilization_synth.rpt" "$resultDir/temp.log"
+      command "report_utilization -hierarchical -file $resultDir/${moduleName}_utilization_synth.rpt" "$resultDir/temp.log"
+      command "report_utilization -hierarchical -format xml -file $resultDir/${moduleName}_utilization_synth.xml" "$resultDir/temp.log"
       set end_time [clock seconds]
       log_time report_utilization $start_time $end_time 0 "Report Synthesis Utilization of $module"
    }
